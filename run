#!/bin/bash

RUNTIME="docker"

if command -v podman &> /dev/null; then
    echo "Found Podman, using that."
    RUNTIME="podman"
else
    echo "Using Docker for containers."
fi


if [ "$("${RUNTIME}" images | grep "shopkeeper-php")" == "" ] || [ "${1}" == "--rebuild" ]; then
    if [ "${1}" == "--rebuild" ]; then
        shift
    fi

    cd Dockerfiles

    if [ ! -f "alpine.tar.gz" ]; then
        # Natanael Copa <ncopa@alpinelinux.org>
        # ^^ The key is used to sign alpine linux image archives
        # so that we know the file we get has _at least_ been signed off
        # by alpine and has not been messed with.
        gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys 0482D84022F52DF1C4E7CD43293ACD0907D9495A

        curl https://uk.alpinelinux.org/alpine/v3.20/releases/x86_64/alpine-minirootfs-3.20.1-x86_64.tar.gz.asc > alpine-minirootfs-3.20.1-x86_64.tar.gz.asc
        curl https://uk.alpinelinux.org/alpine/v3.20/releases/x86_64/alpine-minirootfs-3.20.1-x86_64.tar.gz > alpine-minirootfs-3.20.1-x86_64.tar.gz

        clamscan *.tar.gz *.asc

        echo "3240db891d4a3bfd26f812b5efbc25bbcbd83fa3ee9eda5c84b43bb496fc7cff  alpine-minirootfs-3.20.1-x86_64.tar.gz" | sha256sum -c
        gpg --verify alpine-minirootfs-3.20.1-x86_64.tar.gz.asc
        mv alpine-minirootfs-3.20.1-x86_64.tar.gz alpine.tar.gz
    fi

    cd ..

    "${RUNTIME}" build -t shopkeeper-php -f Dockerfiles/php.Dockerfile Dockerfiles
fi

"${RUNTIME}" run --rm -e "SERVER_PORT=54321" -p "54321:54321" -ti -w "/work" -v "${PWD}:/work" shopkeeper-php $@
